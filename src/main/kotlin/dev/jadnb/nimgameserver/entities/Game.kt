package dev.jadnb.nimgameserver.entities

import com.fasterxml.jackson.annotation.JsonIgnore
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import jakarta.persistence.*
import org.hibernate.annotations.Immutable
import java.util.UUID

/**
 * JPA entity that represents a single game and stores accompanying information.
 *
 * @param id Contains a unique UUID generated by the JPA backend
 * @param currentState the actual game state is stored in a separate entity, the game object
 * only keeps a reference to it.
 * @param allTurns Contains a list of all gameStates that were associated with this game.
 * @param allowedMoves A list that specifies how many matches can be taken per turn in this
 * specific instantiation of the game
 * @param computerPlayerStrategy The strategy the computer player should employ in this game
 * @param winner is either "none" until no winner is decided, "Player" if the player won or
 * "Computer" if the computer won.
 */
@Entity
class Game(
    @Id
    @GeneratedValue
    val id: UUID? = null,
    @OneToOne
    @JsonIgnoreProperties("game", "id")
    var currentState: GameState?,
    @OneToMany
    @JsonIgnore
    val allTurns: MutableList<GameState>,
    @ElementCollection
    @Immutable
    val allowedMoves: MutableList<Int>,
    val computerPlayerStrategy: String = "DP",
    var winner: String = "none",
)
